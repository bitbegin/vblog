(window.webpackJsonp=window.webpackJsonp||[]).push([[21],{390:function(e,r,a){"use strict";a.r(r);var t=a(5),n=Object(t.a)({},(function(){var e=this,r=e._self._c;return r("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[r("p",[r("code",[e._v("Red")]),e._v("提供的错误处理机制属于异常。")]),e._v(" "),r("h1",{attrs:{id:"red的异常概念"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#red的异常概念"}},[e._v("#")]),e._v(" Red的异常概念")]),e._v(" "),r("p",[e._v("在"),r("code",[e._v("Red")]),e._v("中引入了"),r("code",[e._v("error!")]),e._v("类型来表示一个异常，如果直接执行一个"),r("code",[e._v("error!")]),e._v("，且没有捕获，会导致程序退出。")]),e._v(" "),r("h2",{attrs:{id:"抛出异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#抛出异常"}},[e._v("#")]),e._v(" 抛出异常")]),e._v(" "),r("ol",[r("li",[r("code",[e._v("make error!")])]),e._v(" "),r("li",[r("code",[e._v("cause-error")]),e._v("\n这在下面的"),r("code",[e._v("Red异常的用法")]),e._v("章节有介绍")])]),e._v(" "),r("h2",{attrs:{id:"捕获异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#捕获异常"}},[e._v("#")]),e._v(" 捕获异常")]),e._v(" "),r("p",[e._v("可以使用 "),r("code",[e._v("try")]),e._v("或者 "),r("code",[e._v("attempt")]),e._v("， "),r("code",[e._v("try")]),e._v("一个异常时返回的是一个"),r("code",[e._v("error!")]),e._v("类型，而"),r("code",[e._v("attempt")]),e._v("返回的是"),r("code",[e._v("none")]),e._v("。")]),e._v(" "),r("h1",{attrs:{id:"red的异常类型"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#red的异常类型"}},[e._v("#")]),e._v(" Red的异常类型")]),e._v(" "),r("p",[r("code",[e._v("Red")]),e._v("的异常有以下几种：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(">> help system/catalog/errors\nSYSTEM/CATALOG/ERRORS is an object! with the following words and values:\n     throw     object!       [code type break return throw continue while-cond]\n     note      object!       [code type no-load]\n     syntax    object!       [code type invalid missing no-header no-rs-header bad-header malconstruct bad-...\n     script    object!       [code type no-value need-value not-defined not-in-context no-arg expect-arg ex...\n     math      object!       [code type zero-divide overflow positive]\n     access    object!       [code type cannot-open invalid-utf8 no-connect]\n     user      object!       [code type message]\n     internal  object!       [code type bad-path not-here no-memory wrong-mem stack-overflow too-deep featu...\n\n")])])]),r("p",[e._v("比如 "),r("code",[e._v("1 / 0")]),e._v("除零异常：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(">> probe try [1 / 0]\nmake error! [\n    code: 400\n    type: 'math\n    id: 'zero-divide\n    arg1: none\n    arg2: none\n    arg3: none\n    near: none\n    where: '/\n    stack: 41781600\n]\n*** Math Error: attempt to divide by zero\n*** Where: /\n*** Stack: probe  \n\n")])])]),r("p",[e._v("它的"),r("code",[e._v("type")]),e._v("为"),r("code",[e._v("math")]),e._v("，"),r("code",[e._v("id")]),e._v("为"),r("code",[e._v("zero-divide")]),e._v("。")]),e._v(" "),r("p",[e._v("再举一个例子：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(">> probe try [do]\nmake error! [\n    code: 304\n    type: 'script\n    id: 'no-arg\n    arg1: 'do\n    arg2: 'value\n    arg3: none\n    near: none\n    where: 'do\n    stack: 41781600\n]\n*** Script Error: do is missing its value argument\n*** Where: do\n*** Stack: probe  \n\n>> \n")])])]),r("p",[e._v("我们知道系统函数"),r("code",[e._v("do")]),e._v("提供了把数据作为代码执行的功能，它需要一个参数，如果程序没有提供参数，就会抛出这样的异常。它的"),r("code",[e._v("type")]),e._v("为"),r("code",[e._v("script")]),e._v("，"),r("code",[e._v("id")]),e._v("为"),r("code",[e._v("no-arg")]),e._v("。")]),e._v(" "),r("p",[e._v("而且我们从这些名称可以大致看出错误的原因。")]),e._v(" "),r("h1",{attrs:{id:"red异常的用法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#red异常的用法"}},[e._v("#")]),e._v(" Red异常的用法")]),e._v(" "),r("p",[r("code",[e._v("type")]),e._v("为"),r("code",[e._v("user")]),e._v("，"),r("code",[e._v("id")]),e._v("为"),r("code",[e._v("message")]),e._v("的错误是Red提供的默认用户异常，它可以通过"),r("code",[e._v("make error!")]),e._v("创建。")]),e._v(" "),r("h2",{attrs:{id:"通过make-error-创建异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#通过make-error-创建异常"}},[e._v("#")]),e._v(" 通过"),r("code",[e._v("make error!")]),e._v("创建异常")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('>> probe try [make error! "hello"]\nmake error! [\n    code: 600\n    type: \'user\n    id: \'message\n    arg1: "hello"\n    arg2: none\n    arg3: none\n    near: none\n    where: none\n    stack: none\n]\n*** User Error: "hello"\n*** Where: ??? \n\n')])])]),r("p",[e._v("另外 "),r("code",[e._v("make error!")]),e._v("可以创建特定类型的异常：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(">> probe try [make error! 400]\nmake error! [\n    code: 400\n    type: 'math\n    id: 'zero-divide\n    arg1: none\n    arg2: none\n    arg3: none\n    near: none\n    where: none\n    stack: none\n]\n*** Math Error: attempt to divide by zero\n*** Where: ??? \n\n")])])]),r("p",[e._v("或者：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(">> probe try [make error! [math zero-divide]]\nmake error! [\n    code: 400\n    type: 'math\n    id: 'zero-divide\n    arg1: none\n    arg2: none\n    arg3: none\n    near: none\n    where: none\n    stack: none\n]\n*** Math Error: attempt to divide by zero\n*** Where: ??? \n\n")])])]),r("p",[e._v("但是，这两种方式创建的异常都不能带有参数。")]),e._v(" "),r("h2",{attrs:{id:"使用cause-error创建异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#使用cause-error创建异常"}},[e._v("#")]),e._v(" 使用"),r("code",[e._v("cause-error")]),e._v("创建异常")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(">> ? cause-error\nUSAGE:\n     CAUSE-ERROR err-type err-id args\n\nDESCRIPTION: \n     Causes an immediate error throw, with the provided information. \n     CAUSE-ERROR is a function! value.\n\nARGUMENTS:\n     err-type     [word!] \n     err-id       [word!] \n     args         [block!] \n")])])]),r("p",[e._v("例如：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v(">> probe try [cause-error 'math 'zero-divide []]\nmake error! [\n    code: 400\n    type: 'math\n    id: 'zero-divide\n    arg1: none\n    arg2: none\n    arg3: none\n    near: none\n    where: 'do\n    stack: 41459176\n]\n*** Math Error: attempt to divide by zero\n*** Where: do\n*** Stack: probe  \n")])])]),r("p",[r("code",[e._v("cause-error")]),e._v("创建异常的功能更加强大，而且可以带参数。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('>> probe try [cause-error \'user \'message ["hello" "world"]]\nmake error! [\n    code: 600\n    type: \'user\n    id: \'message\n    arg1: "hello"\n    arg2: "world"\n    arg3: none\n    near: none\n    where: \'do\n    stack: 41781640\n]\n*** User Error: "hello"\n*** Where: do\n*** Stack: probe  \n\n')])])]),r("h1",{attrs:{id:"自定义用户异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#自定义用户异常"}},[e._v("#")]),e._v(" 自定义用户异常")]),e._v(" "),r("p",[e._v("上面例子中的异常都是Red语言提供的异常，有的时候我们需要自定义异常，以区别其他异常。我们可以这样定义一个异常：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('>> probe system/catalog/errors/user: make system/catalog/errors/user [my-error: ["info [" :arg1 ": (" :arg2 " " :arg3 ")]"]]\nmake object! [\n    code: 800\n    type: "User Error"\n    message: [:arg1]\n    my-error: ["info [" :arg1 ": (" :arg2 " " :arg3 ")]"]\n]\n== make object! [\n    code: 800\n    type: "User Error"\n    message: [:arg1]\n    my-error: ["info [" :ar...\n>> \n')])])]),r("p",[e._v("然后可以使用"),r("code",[e._v("cause-error")]),e._v("使用该异常类型创建异常：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('>> new-error: func [name [word!] arg2 arg3][\n[    \tcause-error \'user \'my-error [name arg2 arg3]\n[    ]\n== func [name [word!] arg2 arg3][cause-error \'user \'my-error [name arg2 arg3]]\n>> probe try [new-error \'func-name "msg1" "msg2"]\nmake error! [\n    code: 601\n    type: \'user\n    id: \'my-error\n    arg1: \'func-name\n    arg2: "msg1"\n    arg3: "msg2"\n    near: none\n    where: \'do\n    stack: 41781680\n]\n*** User Error: info [ func-name : ( "msg1"   "msg2" )]\n*** Where: do\n*** Stack: probe  \n\n')])])]),r("h1",{attrs:{id:"red的catch-throw功能"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#red的catch-throw功能"}},[e._v("#")]),e._v(" Red的"),r("code",[e._v("catch/throw")]),e._v("功能")]),e._v(" "),r("p",[r("code",[e._v("Red")]),e._v("提供了"),r("code",[e._v("catch/throw")]),e._v("语句来完成"),r("code",[e._v("block")]),e._v("块的提前返回。")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('write %file.txt "i am a happy little file with no real purpose"\nprint catch [\n    if exists? %file.txt [throw "Doc found"]\n    "Doc not found"\n]\nDoc found\n')])])]),r("p",[r("code",[e._v("catch/throw")]),e._v("语句是成对出现的，如果程序中使用了"),r("code",[e._v("throw")]),e._v("而没有用"),r("code",[e._v("catch")]),e._v("捕获，会导致异常：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('>> probe try [throw "error"]\n*** Throw Error: no catch for throw: "error"\n*** Where: throw\n*** Stack:  \n')])])]),r("h1",{attrs:{id:"red异常系统的问题"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#red异常系统的问题"}},[e._v("#")]),e._v(" Red异常系统的问题")]),e._v(" "),r("h2",{attrs:{id:"make-error-还不能带参数-arg1-arg2-arg3"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#make-error-还不能带参数-arg1-arg2-arg3"}},[e._v("#")]),e._v(" make error!还不能带参数(arg1/arg2/arg3)")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('make error! [user message ["msg1" "msg2]]\n')])])]),r("p",[e._v("但是可以使用"),r("code",[e._v("cause-error")]),e._v("替代")]),e._v(" "),r("h2",{attrs:{id:"不能捕获特定的异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#不能捕获特定的异常"}},[e._v("#")]),e._v(" 不能捕获特定的异常")]),e._v(" "),r("p",[e._v("或许我们可以增加如下语法：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v("probe try/with [cause-error 'user 'message][\n    ['user 'message] [probe self]\n    ['script 'no-arg] [probe self]]\n")])])]),r("p",[e._v("如果两种异常都没有捕获，异常继续向上层"),r("code",[e._v("throw")]),e._v("。\n当然我们可以捕获后再往上层"),r("code",[e._v("throw")]),e._v("，但是这样不方便使用。如果系统提供捕获特定异常的方式，将能够简化部分异常处理。\n我们可以利用"),r("code",[e._v("bind")]),e._v("，实现该功能：")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('try-catch: func [blk [block!] cond [block!] todo [block!] /local error][\n\tunless error? error: try blk [return error]\n\tif do bind cond \'error [return do bind todo \'error]\n\terror\n]\n\nsuc: "your todo"\n\n;-- test case 1\ncommand: [1 / 0]\ncond: [error/code = 400]\ntodo: [print ["catch" lf error] suc]\na: try-catch command cond todo\nprint a = suc\n\n;-- test case 2\ncommand: [1 / 0]\ncond: [error/code = 300]\ntodo: [print ["catch" lf error] 1]\na: try-catch command cond todo\nprint error? a\n\n;-- test case 3\ncommand: [1 / 1]\ncond: [error/code = 300]\ntodo: [print ["catch" lf error] 1]\na: try-catch command cond todo\nprint a = 1\n')])])]),r("h1",{attrs:{id:"red中异常处理的最佳实践"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#red中异常处理的最佳实践"}},[e._v("#")]),e._v(" Red中异常处理的最佳实践")]),e._v(" "),r("h2",{attrs:{id:"每个context中提供一个自定义异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#每个context中提供一个自定义异常"}},[e._v("#")]),e._v(" 每个context中提供一个自定义异常")]),e._v(" "),r("div",{staticClass:"language- extra-class"},[r("pre",{pre:!0,attrs:{class:"language-text"}},[r("code",[e._v('ctx-a: context [\n\n\tsystem/catalog/errors/user: make system/catalog/errors/user [ctx-a: ["ctx-a [" :arg1 ": (" :arg2 " " :arg3 ")]"]]\n\n\tnew-error: func [name [word!] arg2 arg3][\n\t\tcause-error \'user \'ctx-a [name arg2 arg3]\n\t]\n\n\tfunc-a: func [][\n\t\tnew-error \'func-a "msg1" "msg2"\n\t]\n]\n')])])]),r("h2",{attrs:{id:"由上层模块捕获异常"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#由上层模块捕获异常"}},[e._v("#")]),e._v(" 由上层模块捕获异常")]),e._v(" "),r("Vssue",{attrs:{title:e.$title}})],1)}),[],!1,null,null,null);r.default=n.exports}}]);